;; Problem 45
;; Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

;; Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
;; Pentagonal	 	Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
;; Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
;; It can be verified that T285 = P165 = H143 = 40755.

;; Find the next triangle number that is also pentagonal and hexagonal.

(ns project-euler-clj.problem-045
  (:require [project-euler-clj.common :as common])
  (:require [clojure.set :as sets])
  (:require [clojure.math.combinatorics :as combo]))

(defmacro lazy-seq-gen
  [func init-term init-d d]
  `(defn ~func
     ([] (~func ~init-term ~init-d))
     ([n# diff#] (cons n# (lazy-seq (~func (+ n# diff#)
                                              (+ diff# ~d)))))))

(take 10 ((lazy-seq-gen penta-seq 1 4 3)))
(take 10 ((lazy-seq-gen hexa-seq 1 5 4)))
(take 10 ((lazy-seq-gen hexa-seq 1 5 4)))
(defn take-le-element
  [sq n]
  (last (take-while #(>= n %)
                    sq)))

(defn solve
  []
  (take 3 (filter #(and (= % (take-le-element ((lazy-seq-gen penta-seq 1 4 3)) %))
                        (= % (take-le-element ((lazy-seq-gen hexa-seq 1 5 4)) %)))
                  ((lazy-seq-gen tri-seq 1 4 3)))))

